// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using db_Model_Library;

namespace db_Model_Library.Migrations
{
    [DbContext(typeof(db_Context_Store))]
    [Migration("20210210152951_Create_DbEnterpriseStore_test")]
    partial class Create_DbEnterpriseStore_test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("db_Model_Library.Brand", b =>
            {
                b.Property<int>("BrandId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<string>("BrandName")
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnType("nvarchar(32)");

                b.HasKey("BrandId");

                b.ToTable("Brands");
            });

            modelBuilder.Entity("db_Model_Library.Counterparty", b =>
            {
                b.Property<int>("CounterpartyId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<string>("CounterpartyName")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("nvarchar(64)");

                b.Property<long?>("InnOgrnKpp")
                    .HasColumnType("bigint");

                b.HasKey("CounterpartyId");

                b.ToTable("Counterpartys");
            });

            modelBuilder.Entity("db_Model_Library.Personnel", b =>
            {
                b.Property<int>("PersonnelId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<string>("PersonnelName")
                    .IsRequired()
                    .HasMaxLength(64)
                    .HasColumnType("nvarchar(64)");

                b.HasKey("PersonnelId");

                b.ToTable("Personnels");
            });

            modelBuilder.Entity("db_Model_Library.PersonnelInfo", b =>
            {
                b.Property<long?>("Passport")
                    .HasColumnType("bigint");

                b.Property<int>("PersonnelsPersonnelId")
                    .HasColumnType("int");

                b.HasIndex("PersonnelsPersonnelId");

                b.ToTable("PersonnelsInfo");
            });

            modelBuilder.Entity("db_Model_Library.Product", b =>
            {
                b.Property<int>("ProductId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<int?>("BrandsBrandId")
                    .HasColumnType("int");

                b.Property<string>("ProductName")
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnType("nvarchar(32)");

                b.Property<float?>("ProductSale")
                    .HasColumnType("float");

                b.Property<int?>("ProductsGroupsProductGroupId")
                    .HasColumnType("int");

                b.Property<int?>("UnitsIdUnit")
                    .HasColumnType("int");

                b.HasKey("ProductId");

                b.HasIndex("BrandsBrandId");

                b.HasIndex("ProductsGroupsProductGroupId");

                b.HasIndex("UnitsIdUnit");

                b.ToTable("Products");
            });

            modelBuilder.Entity("db_Model_Library.ProductGroup", b =>
            {
                b.Property<int>("ProductGroupId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<string>("ProductGroupName")
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnType("nvarchar(32)");

                b.HasKey("ProductGroupId");

                b.ToTable("ProductsGroups");
            });

            modelBuilder.Entity("db_Model_Library.ProductGroupSale", b =>
            {
                b.Property<int>("ProductsGroupsProductGroupId")
                    .HasColumnType("int");

                b.Property<float>("Sale")
                    .HasColumnType("float");

                b.HasIndex("ProductsGroupsProductGroupId");

                b.ToTable("ProductsGroupsSales");
            });

            modelBuilder.Entity("db_Model_Library.Realization", b =>
            {
                b.Property<int>("RealizationId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<int>("CounterpartysCounterpartyId")
                    .HasColumnType("int");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2(0)");

                b.Property<int>("PersonnelsPersonnelId")
                    .HasColumnType("int");

                b.Property<int>("StoragesStorageId")
                    .HasColumnType("int");

                b.HasKey("RealizationId");

                b.HasIndex("CounterpartysCounterpartyId");

                b.HasIndex("PersonnelsPersonnelId");

                b.HasIndex("StoragesStorageId");

                b.ToTable("Realizations");
            });

            modelBuilder.Entity("db_Model_Library.RealizationPriceQty", b =>
            {
                b.Property<decimal>("PriceSelling")
                    .HasColumnType("decimal(18,2)");

                b.Property<int>("ProductId")
                    .HasColumnType("int");

                b.Property<float>("Quantity")
                    .HasColumnType("float");

                b.Property<int>("RealizationId")
                    .HasColumnType("int");

                b.HasKey("ProductId", "RealizationId");
                b.HasIndex("ProductId");
                b.HasIndex("RealizationId");

                b.ToTable("RealizationPriceQtys");
            });

            modelBuilder.Entity("db_Model_Library.Storage", b =>
            {
                b.Property<int>("StorageId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<string>("StorageName")
                    .IsRequired()
                    .HasMaxLength(32)
                    .HasColumnType("nvarchar(32)");

                b.HasKey("StorageId");

                b.ToTable("Storages");
            });

            modelBuilder.Entity("db_Model_Library.Supply", b =>
            {
                b.Property<int>("SupplyId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<int>("CounterpartysCounterpartyId")
                    .HasColumnType("int");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2(0)");

                b.Property<int>("StoragesStorageId")
                    .HasColumnType("int");

                b.HasKey("SupplyId");

                b.HasIndex("CounterpartysCounterpartyId");

                b.HasIndex("StoragesStorageId");

                b.ToTable("Supplies");
            });

            modelBuilder.Entity("db_Model_Library.SupplyPriceQty", b =>
            {
                b.Property<decimal>("PricePurchase")
                    .HasColumnType("decimal(18,2)");

                b.Property<int>("ProductId")
                    .HasColumnType("int");

                b.Property<float>("Quantity")
                    .HasColumnType("float");

                b.Property<int>("SupplyId")
                    .HasColumnType("int");

                b.HasKey("ProductId", "SupplyId");
                b.HasIndex("ProductId");
                b.HasIndex("SupplyId");

                b.ToTable("SupplyPriceQtys");
            });

            modelBuilder.Entity("db_Model_Library.Unit", b =>
            {
                b.Property<int>("IdUnit")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .UseIdentityColumn(1, 1);

                b.Property<string>("UnitName")
                    .IsRequired()
                    .HasMaxLength(16)
                    .HasColumnType("nvarchar(16)");

                b.HasKey("IdUnit");

                b.ToTable("Units");
            });

            modelBuilder.Entity("db_Model_Library.PersonnelInfo", b =>
            {
                b.HasOne("db_Model_Library.Personnel", "Personnels")
                    .WithMany()
                    .HasForeignKey("PersonnelsPersonnelId");

                b.Navigation("Personnels");
            });

            modelBuilder.Entity("db_Model_Library.Product", b =>
            {
                b.HasOne("db_Model_Library.Brand", "Brands")
                    .WithMany("Products")
                    .HasForeignKey("BrandsBrandId");

                b.HasOne("db_Model_Library.ProductGroup", "ProductsGroups")
                    .WithMany("Products")
                    .HasForeignKey("ProductsGroupsProductGroupId");

                b.HasOne("db_Model_Library.Unit", "Units")
                    .WithMany("Products")
                    .HasForeignKey("UnitsIdUnit");

                b.Navigation("Brands");

                b.Navigation("ProductsGroups");

                b.Navigation("Units");
            });

            modelBuilder.Entity("db_Model_Library.ProductGroupSale", b =>
            {
                b.HasOne("db_Model_Library.ProductGroup", "ProductsGroups")
                    .WithMany()
                    .HasForeignKey("ProductsGroupsProductGroupId");

                b.Navigation("ProductsGroups");
            });

            modelBuilder.Entity("db_Model_Library.Realization", b =>
            {
                b.HasOne("db_Model_Library.Counterparty", "Counterpartys")
                    .WithMany("Realizations")
                    .HasForeignKey("CounterpartysCounterpartyId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("db_Model_Library.Personnel", "Personnels")
                    .WithMany("Realizations")
                    .HasForeignKey("PersonnelsPersonnelId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("db_Model_Library.Storage", "Storages")
                    .WithMany("Realizations")
                    .HasForeignKey("StoragesStorageId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Counterpartys");

                b.Navigation("Personnels");

                b.Navigation("Storages");
            });

            modelBuilder.Entity("db_Model_Library.RealizationPriceQty", b =>
            {
                b.HasOne("db_Model_Library.Product", "Products")
                    .WithMany()
                    .HasForeignKey("ProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("db_Model_Library.Realization", "Realizations")
                    .WithMany()
                    .HasForeignKey("RealizationId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Products");

                b.Navigation("Realizations");
            });

            modelBuilder.Entity("db_Model_Library.Supply", b =>
            {
                b.HasOne("db_Model_Library.Counterparty", "Counterpartys")
                    .WithMany("Supplies")
                    .HasForeignKey("CounterpartysCounterpartyId");

                b.HasOne("db_Model_Library.Storage", "Storages")
                    .WithMany("Supplies")
                    .HasForeignKey("StoragesStorageId");

                b.Navigation("Counterpartys");

                b.Navigation("Storages");
            });

            modelBuilder.Entity("db_Model_Library.SupplyPriceQty", b =>
            {
                b.HasOne("db_Model_Library.Product", "Products")
                    .WithMany()
                    .HasForeignKey("ProductId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("db_Model_Library.Supply", "Supplys")
                    .WithMany()
                    .HasForeignKey("SupplyId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Products");

                b.Navigation("Supplys");
            });

            modelBuilder.Entity("db_Model_Library.Brand", b =>
            {
                b.Navigation("Products");
            });

            modelBuilder.Entity("db_Model_Library.Counterparty", b =>
            {
                b.Navigation("Realizations");

                b.Navigation("Supplies");
            });

            modelBuilder.Entity("db_Model_Library.Personnel", b =>
            {
                b.Navigation("Realizations");
            });

            modelBuilder.Entity("db_Model_Library.ProductGroup", b =>
            {
                b.Navigation("Products");
            });

            modelBuilder.Entity("db_Model_Library.Storage", b =>
            {
                b.Navigation("Realizations");

                b.Navigation("Supplies");
            });

            modelBuilder.Entity("db_Model_Library.Unit", b =>
            {
                b.Navigation("Products");
            });
#pragma warning restore 612, 618
        }
    }
}
